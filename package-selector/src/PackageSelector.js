import React, { useState, useEffect } from 'react';
import './PackageSelector.css';

const PackageSelector = () => {
  // –û—Å–Ω–æ–≤–Ω—ñ –¥–∞–Ω—ñ –ø–∞–∫–µ—Ç—ñ–≤
  const packages = [
    { id: 1, name: 'Etsy Ultimate', basePrice: 3999, icon: 'üõçÔ∏è', description: '–ü–æ–≤–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è –≤–∞—à–æ–≥–æ Etsy –º–∞–≥–∞–∑–∏–Ω—É –∑ AI-–≥–µ–Ω–µ—Ä–∞—Ü—ñ—î—é –æ–ø–∏—Å—ñ–≤ —ñ –∞–Ω–∞–ª—ñ—Ç–∏–∫–æ—é –ø—Ä–æ–¥–∞–∂—ñ–≤.' },
    { id: 2, name: 'Shopify Ultimate', basePrice: 4999, icon: 'üè™', description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è Shopify –∑ –±–∞–≥–∞—Ç–æ–∫–∞–Ω–∞–ª—å–Ω–∏–º–∏ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è–º–∏ —Ç–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∏–º–∏ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏.' },
    { id: 3, name: 'QuickBooks Ultimate', basePrice: 3799, icon: 'üìä', description: '–§—ñ–Ω–∞–Ω—Å–æ–≤–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è –∑ —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è–º —á–µ–∫—ñ–≤ —Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º –≤–∏—Å—Ç–∞–≤–ª–µ–Ω–Ω—è–º —Ä–∞—Ö—É–Ω–∫—ñ–≤.' },
    { id: 4, name: 'AI Chatbot Ultimate', basePrice: 4799, icon: 'ü§ñ', description: '–û–º–Ω—ñ–∫–∞–Ω–∞–ª—å–Ω–∏–π AI-—á–∞—Ç–±–æ—Ç –¥–ª—è —Å–∞–π—Ç—É, WhatsApp, —Ç–∞ Instagram –∑ –Ω–∞–≤—á–∞–Ω–Ω—è–º –Ω–∞ –≤–ª–∞—Å–Ω–∏—Ö –¥–∞–Ω–∏—Ö.' },
    { id: 5, name: 'Email Ultimate', basePrice: 2999, icon: 'üìß', description: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è email-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É –∑ —Å–µ–≥–º–µ–Ω—Ç–∞—Ü—ñ—î—é, –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–∞—Ü—ñ—î—é —Ç–∞ A/B —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è–º.' },
    { id: 6, name: 'Social Media Ultimate', basePrice: 3699, icon: 'üì±', description: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è –≤—Å—ñ—Ö —Å–æ—Ü–º–µ—Ä–µ–∂ –∑ AI-–∫–æ–Ω—Ç–µ–Ω—Ç–æ–º, –∞–Ω–∞–ª—ñ—Ç–∏–∫–æ—é —Ç–∞ –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫–æ–º.' },
  ];

  // –¢–∞–±–ª–∏—Ü—è –∑–Ω–∏–∂–æ–∫
  const discountTable = [
    { packages: 1, baseDiscount: 0, communityDiscount: 30 },
    { packages: 2, baseDiscount: 15, communityDiscount: 25 },
    { packages: 3, baseDiscount: 20, communityDiscount: 25 },
    { packages: 4, baseDiscount: 25, communityDiscount: 22 },
    { packages: 5, baseDiscount: 30, communityDiscount: 20 },
    { packages: 6, baseDiscount: 35, communityDiscount: 20 },
  ];

  // –°—Ç–∞–Ω
  const [selectedPackages, setSelectedPackages] = useState([]);
  const [isUkrainianCommunity, setIsUkrainianCommunity] = useState(false);
  const [totalPrice, setTotalPrice] = useState(0);
  const [savings, setSavings] = useState(0);
  const [effectiveDiscount, setEffectiveDiscount] = useState(0);
  const [nextDiscount, setNextDiscount] = useState(null);

  // –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –ø–∞–∫–µ—Ç—É
  const togglePackage = (packageId) => {
    if (selectedPackages.includes(packageId)) {
      setSelectedPackages(selectedPackages.filter(id => id !== packageId));
    } else {
      setSelectedPackages([...selectedPackages, packageId]);
    }
  };

  // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω –ø—Ä–∏ –∑–º—ñ–Ω—ñ –≤–∏–±—Ä–∞–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤
  useEffect(() => {
    if (selectedPackages.length === 0) {
      setTotalPrice(0);
      setSavings(0);
      setEffectiveDiscount(0);
      setNextDiscount(discountTable[0]);
      return;
    }

    // –ë–∞–∑–æ–≤–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –≤—Å—ñ—Ö –≤–∏–±—Ä–∞–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤
    const baseTotal = selectedPackages.reduce((sum, id) => {
      const pkg = packages.find(p => p.id === id);
      return sum + pkg.basePrice;
    }, 0);

    // –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –∑–Ω–∏–∂–æ–∫
    const packageCount = selectedPackages.length;
    const discountInfo = discountTable[packageCount - 1];
    
    // –ü—Ä–æ–º—ñ–∂–Ω–∞ —Ü—ñ–Ω–∞ –ø—ñ—Å–ª—è –±–∞–∑–æ–≤–æ—ó –∑–Ω–∏–∂–∫–∏
    const afterBaseDiscount = baseTotal * (1 - discountInfo.baseDiscount / 100);
    
    // –ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –ø—ñ—Å–ª—è –∑–Ω–∏–∂–∫–∏ –¥–ª—è —Å–ø—ñ–ª—å–Ω–æ—Ç–∏
    const finalPrice = isUkrainianCommunity 
      ? afterBaseDiscount * (1 - discountInfo.communityDiscount / 100) 
      : afterBaseDiscount;
    
    // –ó–∞–≥–∞–ª—å–Ω–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–∞ –∑–Ω–∏–∂–∫–∞
    const totalDiscount = ((baseTotal - finalPrice) / baseTotal) * 100;
    
    setTotalPrice(Math.round(finalPrice));
    setSavings(Math.round(baseTotal - finalPrice));
    setEffectiveDiscount(Math.round(totalDiscount * 10) / 10);
    
    // –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ä—ñ–≤–µ–Ω—å –∑–Ω–∏–∂–∫–∏
    if (packageCount < 6) {
      setNextDiscount(discountTable[packageCount]);
    } else {
      setNextDiscount(null);
    }
  }, [selectedPackages, isUkrainianCommunity]);

  return (
    <div className="package-selector">
      <h2>–í–∏–±–µ—Ä—ñ—Ç—å –ø–∞–∫–µ—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó</h2>
      
      {/* –ü–µ—Ä–µ–º–∏–∫–∞—á —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ */}
      <div className="community-toggle">
        <label className="toggle-label">
          <span>–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –±—ñ–∑–Ω–µ—Å-—Å–ø—ñ–ª—å–Ω–æ—Ç–∞</span>
          <div className="toggle-switch">
            <input 
              type="checkbox" 
              checked={isUkrainianCommunity}
              onChange={() => setIsUkrainianCommunity(!isUkrainianCommunity)}
            />
            <div className={`toggle-slider ${isUkrainianCommunity ? 'active' : ''}`}></div>
          </div>
        </label>
      </div>
      
      {/* –ö–∞—Ä—Ç–∫–∏ –ø–∞–∫–µ—Ç—ñ–≤ */}
      <div className="packages-grid">
        {packages.map((pkg) => (
          <div 
            key={pkg.id}
            onClick={() => togglePackage(pkg.id)}
            className={`package-card ${selectedPackages.includes(pkg.id) ? 'selected' : ''}`}
          >
            <div className="package-content">
              <div className="package-icon">{pkg.icon}</div>
              <h3>{pkg.name}</h3>
              <div className="package-description">
                {pkg.description}
              </div>
              <div className="package-price">
                ${pkg.basePrice}
              </div>
              <div className="package-selector-indicator">
                <span className={selectedPackages.includes(pkg.id) ? 'selected' : ''}>
                  {selectedPackages.includes(pkg.id) ? '‚úì' : ''}
                </span>
              </div>
            </div>
          </div>
        ))}
      </div>
      
      {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∞ –ø–∞–Ω–µ–ª—å */}
      <div className={`summary-panel ${selectedPackages.length > 0 ? 'visible' : ''}`}>
        <div className="summary-content">
          <div className="summary-grid">
            <div className="selected-packages">
              <h3>–í–∞—à –≤–∏–±—ñ—Ä</h3>
              <ul>
                {selectedPackages.map(id => {
                  const pkg = packages.find(p => p.id === id);
                  return (
                    <li key={id}>
                      <span>{pkg.icon} {pkg.name}</span>
                      <span>${pkg.basePrice}</span>
                    </li>
                  );
                })}
              </ul>
              {nextDiscount && (
                <div className="next-discount-alert">
                  <p>
                    <strong>–î–æ–¥–∞–π—Ç–µ —â–µ –æ–¥–∏–Ω –ø–∞–∫–µ—Ç</strong> –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–Ω–∏–∂–∫–∏ {nextDiscount.baseDiscount}% + 
                    {isUkrainianCommunity ? ` ${nextDiscount.communityDiscount}%` : ''}!
                  </p>
                </div>
              )}
            </div>
            
            <div className="price-calculation">
              <div className="price-items">
                <div className="price-item">
                  <span>–ë–∞–∑–æ–≤–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å:</span>
                  <span>${selectedPackages.reduce((sum, id) => {
                    const pkg = packages.find(p => p.id === id);
                    return sum + pkg.basePrice;
                  }, 0)}</span>
                </div>
                
                {selectedPackages.length > 1 && (
                  <div className="price-item discount">
                    <span>–ó–Ω–∏–∂–∫–∞ –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞–∫–µ—Ç—ñ–≤ ({discountTable[selectedPackages.length-1].baseDiscount}%):</span>
                    <span>-${Math.round(selectedPackages.reduce((sum, id) => {
                      const pkg = packages.find(p => p.id === id);
                      return sum + pkg.basePrice;
                    }, 0) * discountTable[selectedPackages.length-1].baseDiscount / 100)}</span>
                  </div>
                )}
                
                {isUkrainianCommunity && (
                  <div className="price-item discount">
                    <span>–ó–Ω–∏–∂–∫–∞ –¥–ª—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ ({discountTable[selectedPackages.length-1].communityDiscount}%):</span>
                    <span>-${Math.round(selectedPackages.reduce((sum, id) => {
                      const pkg = packages.find(p => p.id === id);
                      return sum + pkg.basePrice;
                    }, 0) * (1 - discountTable[selectedPackages.length-1].baseDiscount / 100) * discountTable[selectedPackages.length-1].communityDiscount / 100)}</span>
                  </div>
                )}
              </div>
              
              <div className="total-price">
                <div className="final-price">
                  <span>–§—ñ–Ω–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞:</span>
                  <span>${totalPrice}</span>
                </div>
                <div className="savings">
                  <span>–í–∏ –µ–∫–æ–Ω–æ–º–∏—Ç–µ:</span>
                  <span>${savings} ({effectiveDiscount}%)</span>
                </div>
              </div>
              
              <button className="order-button">
                –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
              </button>
            </div>
          </div>
        </div>
      </div>
      
      {/* –ü—É—Å—Ç–∞ –∫–æ—Ä–∑–∏–Ω–∞ */}
      {selectedPackages.length === 0 && (
        <div className="empty-cart">
          <div className="cart-icon">üõí</div>
          <p>–í–∏–±–µ—Ä—ñ—Ç—å –ø–∞–∫–µ—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ —Ü—ñ–Ω—É –∑—ñ –∑–Ω–∏–∂–∫–æ—é</p>
        </div>
      )}
    </div>
  );
};

export default PackageSelector; 